
*** Testing all permutation methods with 3 objects ***


 *** Testing recursive_backtracking ***
   Enter Round i=2 [A, B, C]
   Enter cycle i= 2 j= 0 [A, B, C]
      Enter Round i=1 [C, B, A]
      Enter cycle i= 1 j= 0 [C, B, A]
         Enter Round i=0 [B, C, A]
  1) [B, C, A]
      Enter cycle i= 1 j= 1 [C, B, A]
         Enter Round i=0 [C, B, A]
  2) [C, B, A]
      Leave Round i=1 [C, B, A]
   Enter cycle i= 2 j= 1 [A, B, C]
      Enter Round i=1 [A, C, B]
      Enter cycle i= 1 j= 0 [A, C, B]
         Enter Round i=0 [C, A, B]
  3) [C, A, B]
      Enter cycle i= 1 j= 1 [A, C, B]
         Enter Round i=0 [A, C, B]
  4) [A, C, B]
      Leave Round i=1 [A, C, B]
   Enter cycle i= 2 j= 2 [A, B, C]
      Enter Round i=1 [A, B, C]
      Enter cycle i= 1 j= 0 [A, B, C]
         Enter Round i=0 [B, A, C]
  5) [B, A, C]
      Enter cycle i= 1 j= 1 [A, B, C]
         Enter Round i=0 [A, B, C]
  6) [A, B, C]
      Leave Round i=1 [A, B, C]
   Leave Round i=2 [A, B, C]

*** Count of recursive_backtracking swaps = 40 (62 ms)

 *** Testing recursive_heap_sedgewick ***
   Enter Round i=2 [A, B, C]
      Enter Round i=1 [A, B, C]
         Enter Round i=0 [A, B, C]
  1) [A, B, C]
      return-and-swap: i=1 j=0
         Enter Round i=0 [B, A, C]
  2) [B, A, C]
      return-and-swap: i=1 j=1
      Leave Round i=1 [B, A, C]
   return-and-swap: i=2 j=0
      Enter Round i=1 [C, A, B]
         Enter Round i=0 [C, A, B]
  3) [C, A, B]
      return-and-swap: i=1 j=0
         Enter Round i=0 [A, C, B]
  4) [A, C, B]
      return-and-swap: i=1 j=1
      Leave Round i=1 [A, C, B]
   return-and-swap: i=2 j=1
      Enter Round i=1 [B, C, A]
         Enter Round i=0 [B, C, A]
  5) [B, C, A]
      return-and-swap: i=1 j=0
         Enter Round i=0 [C, B, A]
  6) [C, B, A]
      return-and-swap: i=1 j=1
      Leave Round i=1 [C, B, A]
   return-and-swap: i=2 j=2
   Leave Round i=2 [A, B, C]

*** Count of recursive_heap_sedgewick swaps = 24 (0 ms)

*** Testing lexicographically ***
Round i=0 [A, B, C]
  1) [A, B, C]
Round i=1 [A, C, B]
  2) [A, C, B]
Round i=2 [B, A, C]
  3) [B, A, C]
Round i=3 [B, C, A]
  4) [B, C, A]
Round i=4 [C, A, B]
  5) [C, A, B]
Round i=5 [C, B, A]
  6) [C, B, A]

*** Count of lexicographically swaps = 32 (0 ms)

 ***test_permutate_naive NOT IMPLEMENTED!! ***

 *** Finished ***
